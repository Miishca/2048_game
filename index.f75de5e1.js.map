{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["\"use strict\";\n\nconst tbody = document.querySelector(\"tbody\");\nconst gameScore = document.querySelector(\".game-score\");\nconst button = document.querySelector(\"button\");\nconst messageStart = document.querySelector(\".message-start\");\nconst messageWin = document.querySelector(\".message-win\");\nconst messageLose = document.querySelector(\".message-lose\");\nconst messageContainer = document.querySelector(\".message-container\");\n\nlet gameFields = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet score = 0;\n\nlet isStart = false;\n\nlet isWin = false;\n\ndocument.addEventListener(\"keydown\", handleKeyPress);\n\nfunction gameOver() {\n  for (let row = 0; row < gameFields.length; row++) {\n    for (let column = 0; column < gameFields[row].length; column++) {\n      if (gameFields[row][column] === 0) {\n        return false;\n      }\n\n      if (\n        column < gameFields[row].length - 1 &&\n        gameFields[row][column] === gameFields[row][column + 1]\n      ) {\n        return false;\n      }\n\n      if (\n        row < gameFields.length - 1 &&\n        gameFields[row][column] === gameFields[row + 1][column]\n      ) {\n        return false;\n      }\n    }\n  }\n\n  messageLose.classList.remove(\"hidden\");\n\n  return true;\n}\n\nfunction gameIsWin() {\n  for (let row = 0; row < gameFields.length; row++) {\n    for (let column = 0; column < gameFields[row].length; column++) {\n      if (gameFields[row][column] === 2048) {\n        isWin = true;\n        messageWin.classList.remove(\"hidden\");\n\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction moveTilesRight() {\n  let moved = false;\n\n  for (let row = 0; row < gameFields.length; row++) {\n    let newRow = gameFields[row].filter((tile) => tile !== 0);\n\n    for (let i = newRow.length - 1; i > 0; i--) {\n      if (newRow[i] === newRow[i - 1]) {\n        newRow[i] *= 2;\n        newRow[i - 1] = 0;\n        score += newRow[i];\n        moved = true;\n      }\n    }\n    newRow = newRow.filter((tile) => tile !== 0);\n\n    while (newRow.length < 4) {\n      newRow.unshift(0);\n    }\n\n    if (JSON.stringify(newRow) !== JSON.stringify(gameFields[row])) {\n      moved = true;\n    }\n    gameFields[row] = newRow;\n  }\n\n  if (moved) {\n    generateRandomNumber();\n    render();\n  }\n}\n\nfunction moveTilesLeft() {\n  let moved = false;\n\n  for (let row = 0; row < gameFields.length; row++) {\n    let newRow = gameFields[row].filter((tile) => tile !== 0);\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        newRow[i + 1] = 0;\n        score += newRow[i];\n        moved = true;\n      }\n    }\n    newRow = newRow.filter((tile) => tile !== 0);\n\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    if (JSON.stringify(newRow) !== JSON.stringify(gameFields[row])) {\n      moved = true;\n    }\n    gameFields[row] = newRow;\n  }\n\n  if (moved) {\n    generateRandomNumber();\n    render();\n  }\n}\n\nfunction moveTilesUp() {\n  let moved = false;\n\n  for (let column = 0; column < 4; column++) {\n    let newCol = [];\n\n    for (let row = 0; row < 4; row++) {\n      if (gameFields[row][column] !== 0) {\n        newCol.push(gameFields[row][column]);\n      }\n    }\n\n    for (let i = 0; i < newCol.length - 1; i++) {\n      if (newCol[i] === newCol[i + 1]) {\n        newCol[i] *= 2;\n        newCol[i + 1] = 0;\n        score += newCol[i];\n        moved = true;\n      }\n    }\n    newCol = newCol.filter((tile) => tile !== 0);\n\n    while (newCol.length < 4) {\n      newCol.push(0);\n    }\n\n    for (let row = 0; row < 4; row++) {\n      if (gameFields[row][column] !== newCol[row]) {\n        moved = true;\n      }\n      gameFields[row][column] = newCol[row];\n    }\n  }\n\n  if (moved) {\n    generateRandomNumber();\n    render();\n  }\n}\n\nfunction moveTilesDown() {\n  let moved = false;\n\n  for (let column = 0; column < 4; column++) {\n    let newCol = [];\n\n    for (let row = 0; row < 4; row++) {\n      if (gameFields[row][column] !== 0) {\n        newCol.push(gameFields[row][column]);\n      }\n    }\n\n    for (let i = newCol.length - 1; i > 0; i--) {\n      if (newCol[i] === newCol[i - 1]) {\n        newCol[i] *= 2;\n        newCol[i - 1] = 0;\n        score += newCol[i];\n        moved = true;\n      }\n    }\n\n    newCol = newCol.filter((tile) => tile !== 0);\n\n    while (newCol.length < 4) {\n      newCol.unshift(0);\n    }\n\n    for (let row = 0; row < 4; row++) {\n      if (gameFields[row][column] !== newCol[row]) {\n        moved = true;\n      }\n      gameFields[row][column] = newCol[row];\n    }\n  }\n\n  if (moved) {\n    generateRandomNumber();\n    render();\n  }\n}\n\nfunction generateRandomNumber() {\n  const emptyCells = [];\n\n  for (let row = 0; row < 4; row++) {\n    for (let column = 0; column < 4; column++) {\n      if (gameFields[row][column] === 0) {\n        emptyCells.push({\n          row,\n          column,\n        });\n      }\n    }\n  }\n\n  if (emptyCells.length > 0) {\n    const { row, column } =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    const number = Math.random() < 0.1 ? 4 : 2;\n\n    gameFields[row][column] = number;\n  }\n}\n\nfunction handleKeyPress(ev) {\n  if (isStart) {\n    let moved = false;\n\n    switch (ev.key) {\n      case \"ArrowUp\":\n        moveTilesUp();\n        moved = true;\n        break;\n      case \"ArrowDown\":\n        moveTilesDown();\n        moved = true;\n        break;\n      case \"ArrowLeft\":\n        moveTilesLeft();\n        moved = true;\n        break;\n      case \"ArrowRight\":\n        moveTilesRight();\n        moved = true;\n        break;\n    }\n\n    if (moved) {\n      render();\n    }\n  }\n}\n\nconst render = () => {\n  gameScore.innerHTML = `\n    <span class=\"game-score\">${score}</span>\n  `;\n\n  tbody.innerHTML = \"\";\n\n  for (let i = 0; i < gameFields.length; i++) {\n    const row = document.createElement(\"tr\");\n\n    row.classList.add(\"field-row\");\n\n    for (let j = 0; j < gameFields[i].length; j++) {\n      const cellValue = gameFields[i][j];\n      const cell = document.createElement(\"td\");\n\n      cell.textContent = cellValue === 0 ? \"\" : cellValue;\n      cell.classList.add(\"field-cell\");\n\n      if (cellValue === 0) {\n        cell.classList.add(\"field-cell\");\n      } else {\n        cell.classList.add(`field-cell--${cellValue}`);\n      }\n\n      row.appendChild(cell);\n    }\n\n    tbody.appendChild(row);\n  }\n\n  if (gameOver()) {\n    return;\n  }\n  gameIsWin();\n  messageWin.classList.toggle(\"hidden\", !isWin);\n  messageLose.classList.add(\"hidden\");\n  messageWin.classList.add(\"hidden\");\n\n  if (!isStart) {\n    messageContainer.appendChild(messageStart);\n  } else if (messageContainer.contains(messageStart)) {\n    messageContainer.removeChild(messageStart);\n  }\n};\n\nbutton.addEventListener(\"click\", () => {\n  isStart = true;\n\n  gameFields = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  score = 0;\n\n  button.classList.add(\"restart\");\n  button.textContent = \"Restart\";\n\n  if (messageContainer.contains(messageStart)) {\n    messageContainer.removeChild(messageStart);\n  }\n\n  messageLose.classList.add(\"hidden\");\n  messageWin.classList.add(\"hidden\");\n\n  generateRandomNumber();\n  generateRandomNumber();\n  render();\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}