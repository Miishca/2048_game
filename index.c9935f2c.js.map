{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tbody = document.querySelector(\"tbody\");\nvar gameScore = document.querySelector(\".game-score\");\nvar button = document.querySelector(\"button\");\nvar messageStart = document.querySelector(\".message-start\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar messageContainer = document.querySelector(\".message-container\");\nvar gameFields = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar score = 0;\nvar isStart = false;\nvar isWin = false;\ndocument.addEventListener(\"keydown\", handleKeyPress);\nfunction gameOver() {\n    for(var row = 0; row < gameFields.length; row++)for(var column = 0; column < gameFields[row].length; column++){\n        if (gameFields[row][column] === 0) return false;\n        if (column < gameFields[row].length - 1 && gameFields[row][column] === gameFields[row][column + 1]) return false;\n        if (row < gameFields.length - 1 && gameFields[row][column] === gameFields[row + 1][column]) return false;\n    }\n    messageLose.classList.remove(\"hidden\");\n    return true;\n}\nfunction gameIsWin() {\n    for(var row = 0; row < gameFields.length; row++){\n        for(var column = 0; column < gameFields[row].length; column++)if (gameFields[row][column] === 2048) {\n            isWin = true;\n            messageWin.classList.remove(\"hidden\");\n            return true;\n        }\n    }\n    return false;\n}\nfunction moveTilesRight() {\n    var _loop = function(row) {\n        var newRow = gameFields[row].filter(function(tile) {\n            return tile !== 0;\n        });\n        for(var i = newRow.length - 1; i > 0; i--)if (newRow[i] === newRow[i - 1]) {\n            newRow[i] *= 2;\n            newRow[i - 1] = 0;\n            score += newRow[i];\n            moved = true;\n        }\n        newRow = newRow.filter(function(tile) {\n            return tile !== 0;\n        });\n        while(newRow.length < 4)newRow.unshift(0);\n        if (JSON.stringify(newRow) !== JSON.stringify(gameFields[row])) moved = true;\n        gameFields[row] = newRow;\n    };\n    var moved = false;\n    for(var row = 0; row < gameFields.length; row++)_loop(row);\n    if (moved) {\n        generateRandomNumber();\n        render();\n    }\n}\nfunction moveTilesLeft() {\n    var _loop = function(row) {\n        var newRow = gameFields[row].filter(function(tile) {\n            return tile !== 0;\n        });\n        for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n            newRow[i] *= 2;\n            newRow[i + 1] = 0;\n            score += newRow[i];\n            moved = true;\n        }\n        newRow = newRow.filter(function(tile) {\n            return tile !== 0;\n        });\n        while(newRow.length < 4)newRow.push(0);\n        if (JSON.stringify(newRow) !== JSON.stringify(gameFields[row])) moved = true;\n        gameFields[row] = newRow;\n    };\n    var moved = false;\n    for(var row = 0; row < gameFields.length; row++)_loop(row);\n    if (moved) {\n        generateRandomNumber();\n        render();\n    }\n}\nfunction moveTilesUp() {\n    var _loop = function(column) {\n        var newCol = [];\n        for(var row = 0; row < 4; row++)if (gameFields[row][column] !== 0) newCol.push(gameFields[row][column]);\n        for(var i = 0; i < newCol.length - 1; i++)if (newCol[i] === newCol[i + 1]) {\n            newCol[i] *= 2;\n            newCol[i + 1] = 0;\n            score += newCol[i];\n            moved = true;\n        }\n        newCol = newCol.filter(function(tile) {\n            return tile !== 0;\n        });\n        while(newCol.length < 4)newCol.push(0);\n        for(var row1 = 0; row1 < 4; row1++){\n            if (gameFields[row1][column] !== newCol[row1]) moved = true;\n            gameFields[row1][column] = newCol[row1];\n        }\n    };\n    var moved = false;\n    for(var column = 0; column < 4; column++)_loop(column);\n    if (moved) {\n        generateRandomNumber();\n        render();\n    }\n}\nfunction moveTilesDown() {\n    var _loop = function(column) {\n        var newCol = [];\n        for(var row = 0; row < 4; row++)if (gameFields[row][column] !== 0) newCol.push(gameFields[row][column]);\n        for(var i = newCol.length - 1; i > 0; i--)if (newCol[i] === newCol[i - 1]) {\n            newCol[i] *= 2;\n            newCol[i - 1] = 0;\n            score += newCol[i];\n            moved = true;\n        }\n        newCol = newCol.filter(function(tile) {\n            return tile !== 0;\n        });\n        while(newCol.length < 4)newCol.unshift(0);\n        for(var row1 = 0; row1 < 4; row1++){\n            if (gameFields[row1][column] !== newCol[row1]) moved = true;\n            gameFields[row1][column] = newCol[row1];\n        }\n    };\n    var moved = false;\n    for(var column = 0; column < 4; column++)_loop(column);\n    if (moved) {\n        generateRandomNumber();\n        render();\n    }\n}\nfunction generateRandomNumber() {\n    var emptyCells = [];\n    for(var row = 0; row < 4; row++){\n        for(var column = 0; column < 4; column++)if (gameFields[row][column] === 0) emptyCells.push({\n            row: row,\n            column: column\n        });\n    }\n    if (emptyCells.length > 0) {\n        var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], row1 = _emptyCells_Math_floor.row, column1 = _emptyCells_Math_floor.column;\n        var number = Math.random() < 0.1 ? 4 : 2;\n        gameFields[row1][column1] = number;\n    }\n}\nfunction handleKeyPress(ev) {\n    if (isStart) {\n        var moved = false;\n        switch(ev.key){\n            case \"ArrowUp\":\n                moveTilesUp();\n                moved = true;\n                break;\n            case \"ArrowDown\":\n                moveTilesDown();\n                moved = true;\n                break;\n            case \"ArrowLeft\":\n                moveTilesLeft();\n                moved = true;\n                break;\n            case \"ArrowRight\":\n                moveTilesRight();\n                moved = true;\n                break;\n        }\n        if (moved) render();\n    }\n}\nvar render = function() {\n    gameScore.innerHTML = '\\n    <span class=\"game-score\">'.concat(score, \"</span>\\n  \");\n    tbody.innerHTML = \"\";\n    for(var i = 0; i < gameFields.length; i++){\n        var row = document.createElement(\"tr\");\n        row.classList.add(\"field-row\");\n        for(var j = 0; j < gameFields[i].length; j++){\n            var cellValue = gameFields[i][j];\n            var cell = document.createElement(\"td\");\n            cell.textContent = cellValue === 0 ? \"\" : cellValue;\n            cell.classList.add(\"field-cell\");\n            if (cellValue === 0) cell.classList.add(\"field-cell\");\n            else cell.classList.add(\"field-cell--\".concat(cellValue));\n            row.appendChild(cell);\n        }\n        tbody.appendChild(row);\n    }\n    if (gameOver()) return;\n    gameIsWin();\n    messageWin.classList.toggle(\"hidden\", !isWin);\n    messageLose.classList.add(\"hidden\");\n    messageWin.classList.add(\"hidden\");\n    if (!isStart) messageContainer.appendChild(messageStart);\n    else if (messageContainer.contains(messageStart)) messageContainer.removeChild(messageStart);\n};\nbutton.addEventListener(\"click\", function() {\n    isStart = true;\n    gameFields = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    score = 0;\n    button.classList.add(\"restart\");\n    button.textContent = \"Restart\";\n    if (messageContainer.contains(messageStart)) messageContainer.removeChild(messageStart);\n    messageLose.classList.add(\"hidden\");\n    messageWin.classList.add(\"hidden\");\n    generateRandomNumber();\n    generateRandomNumber();\n    render();\n});\n\n//# sourceMappingURL=index.c9935f2c.js.map\n","\"use strict\";\n\nconst tbody = document.querySelector(\"tbody\");\nconst gameScore = document.querySelector(\".game-score\");\nconst button = document.querySelector(\"button\");\nconst messageStart = document.querySelector(\".message-start\");\nconst messageWin = document.querySelector(\".message-win\");\nconst messageLose = document.querySelector(\".message-lose\");\nconst messageContainer = document.querySelector(\".message-container\");\n\nlet gameFields = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet score = 0;\n\nlet isStart = false;\n\nlet isWin = false;\n\ndocument.addEventListener(\"keydown\", handleKeyPress);\n\nfunction gameOver() {\n  for (let row = 0; row < gameFields.length; row++) {\n    for (let column = 0; column < gameFields[row].length; column++) {\n      if (gameFields[row][column] === 0) {\n        return false;\n      }\n\n      if (\n        column < gameFields[row].length - 1 &&\n        gameFields[row][column] === gameFields[row][column + 1]\n      ) {\n        return false;\n      }\n\n      if (\n        row < gameFields.length - 1 &&\n        gameFields[row][column] === gameFields[row + 1][column]\n      ) {\n        return false;\n      }\n    }\n  }\n\n  messageLose.classList.remove(\"hidden\");\n\n  return true;\n}\n\nfunction gameIsWin() {\n  for (let row = 0; row < gameFields.length; row++) {\n    for (let column = 0; column < gameFields[row].length; column++) {\n      if (gameFields[row][column] === 2048) {\n        isWin = true;\n        messageWin.classList.remove(\"hidden\");\n\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction moveTilesRight() {\n  let moved = false;\n\n  for (let row = 0; row < gameFields.length; row++) {\n    let newRow = gameFields[row].filter((tile) => tile !== 0);\n\n    for (let i = newRow.length - 1; i > 0; i--) {\n      if (newRow[i] === newRow[i - 1]) {\n        newRow[i] *= 2;\n        newRow[i - 1] = 0;\n        score += newRow[i];\n        moved = true;\n      }\n    }\n    newRow = newRow.filter((tile) => tile !== 0);\n\n    while (newRow.length < 4) {\n      newRow.unshift(0);\n    }\n\n    if (JSON.stringify(newRow) !== JSON.stringify(gameFields[row])) {\n      moved = true;\n    }\n    gameFields[row] = newRow;\n  }\n\n  if (moved) {\n    generateRandomNumber();\n    render();\n  }\n}\n\nfunction moveTilesLeft() {\n  let moved = false;\n\n  for (let row = 0; row < gameFields.length; row++) {\n    let newRow = gameFields[row].filter((tile) => tile !== 0);\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        newRow[i + 1] = 0;\n        score += newRow[i];\n        moved = true;\n      }\n    }\n    newRow = newRow.filter((tile) => tile !== 0);\n\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    if (JSON.stringify(newRow) !== JSON.stringify(gameFields[row])) {\n      moved = true;\n    }\n    gameFields[row] = newRow;\n  }\n\n  if (moved) {\n    generateRandomNumber();\n    render();\n  }\n}\n\nfunction moveTilesUp() {\n  let moved = false;\n\n  for (let column = 0; column < 4; column++) {\n    let newCol = [];\n\n    for (let row = 0; row < 4; row++) {\n      if (gameFields[row][column] !== 0) {\n        newCol.push(gameFields[row][column]);\n      }\n    }\n\n    for (let i = 0; i < newCol.length - 1; i++) {\n      if (newCol[i] === newCol[i + 1]) {\n        newCol[i] *= 2;\n        newCol[i + 1] = 0;\n        score += newCol[i];\n        moved = true;\n      }\n    }\n    newCol = newCol.filter((tile) => tile !== 0);\n\n    while (newCol.length < 4) {\n      newCol.push(0);\n    }\n\n    for (let row = 0; row < 4; row++) {\n      if (gameFields[row][column] !== newCol[row]) {\n        moved = true;\n      }\n      gameFields[row][column] = newCol[row];\n    }\n  }\n\n  if (moved) {\n    generateRandomNumber();\n    render();\n  }\n}\n\nfunction moveTilesDown() {\n  let moved = false;\n\n  for (let column = 0; column < 4; column++) {\n    let newCol = [];\n\n    for (let row = 0; row < 4; row++) {\n      if (gameFields[row][column] !== 0) {\n        newCol.push(gameFields[row][column]);\n      }\n    }\n\n    for (let i = newCol.length - 1; i > 0; i--) {\n      if (newCol[i] === newCol[i - 1]) {\n        newCol[i] *= 2;\n        newCol[i - 1] = 0;\n        score += newCol[i];\n        moved = true;\n      }\n    }\n\n    newCol = newCol.filter((tile) => tile !== 0);\n\n    while (newCol.length < 4) {\n      newCol.unshift(0);\n    }\n\n    for (let row = 0; row < 4; row++) {\n      if (gameFields[row][column] !== newCol[row]) {\n        moved = true;\n      }\n      gameFields[row][column] = newCol[row];\n    }\n  }\n\n  if (moved) {\n    generateRandomNumber();\n    render();\n  }\n}\n\nfunction generateRandomNumber() {\n  const emptyCells = [];\n\n  for (let row = 0; row < 4; row++) {\n    for (let column = 0; column < 4; column++) {\n      if (gameFields[row][column] === 0) {\n        emptyCells.push({\n          row,\n          column,\n        });\n      }\n    }\n  }\n\n  if (emptyCells.length > 0) {\n    const { row, column } =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    const number = Math.random() < 0.1 ? 4 : 2;\n\n    gameFields[row][column] = number;\n  }\n}\n\nfunction handleKeyPress(ev) {\n  if (isStart) {\n    let moved = false;\n\n    switch (ev.key) {\n      case \"ArrowUp\":\n        moveTilesUp();\n        moved = true;\n        break;\n      case \"ArrowDown\":\n        moveTilesDown();\n        moved = true;\n        break;\n      case \"ArrowLeft\":\n        moveTilesLeft();\n        moved = true;\n        break;\n      case \"ArrowRight\":\n        moveTilesRight();\n        moved = true;\n        break;\n    }\n\n    if (moved) {\n      render();\n    }\n  }\n}\n\nconst render = () => {\n  gameScore.innerHTML = `\n    <span class=\"game-score\">${score}</span>\n  `;\n\n  tbody.innerHTML = \"\";\n\n  for (let i = 0; i < gameFields.length; i++) {\n    const row = document.createElement(\"tr\");\n\n    row.classList.add(\"field-row\");\n\n    for (let j = 0; j < gameFields[i].length; j++) {\n      const cellValue = gameFields[i][j];\n      const cell = document.createElement(\"td\");\n\n      cell.textContent = cellValue === 0 ? \"\" : cellValue;\n      cell.classList.add(\"field-cell\");\n\n      if (cellValue === 0) {\n        cell.classList.add(\"field-cell\");\n      } else {\n        cell.classList.add(`field-cell--${cellValue}`);\n      }\n\n      row.appendChild(cell);\n    }\n\n    tbody.appendChild(row);\n  }\n\n  if (gameOver()) {\n    return;\n  }\n  gameIsWin();\n  messageWin.classList.toggle(\"hidden\", !isWin);\n  messageLose.classList.add(\"hidden\");\n  messageWin.classList.add(\"hidden\");\n\n  if (!isStart) {\n    messageContainer.appendChild(messageStart);\n  } else if (messageContainer.contains(messageStart)) {\n    messageContainer.removeChild(messageStart);\n  }\n};\n\nbutton.addEventListener(\"click\", () => {\n  isStart = true;\n\n  gameFields = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  score = 0;\n\n  button.classList.add(\"restart\");\n  button.textContent = \"Restart\";\n\n  if (messageContainer.contains(messageStart)) {\n    messageContainer.removeChild(messageStart);\n  }\n\n  messageLose.classList.add(\"hidden\");\n  messageWin.classList.add(\"hidden\");\n\n  generateRandomNumber();\n  generateRandomNumber();\n  render();\n});\n"],"names":["tbody","document","querySelector","gameScore","button","messageStart","messageWin","messageLose","messageContainer","gameFields","score","isStart","isWin","generateRandomNumber","emptyCells","row","column","push","length","_emptyCells_Math_floor","Math","floor","random","row1","column1","addEventListener","ev","moved","key","moveTilesUp","_loop","newCol","i","filter","tile","render","moveTilesDown","unshift","moveTilesLeft","newRow","JSON","stringify","moveTilesRight","innerHTML","concat","createElement","classList","add","j","cellValue","cell","textContent","appendChild","gameOver","remove","gameIsWin","toggle","contains","removeChild"],"version":3,"file":"index.c9935f2c.js.map"}